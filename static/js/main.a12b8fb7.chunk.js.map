{"version":3,"sources":["config/constants.ts","components/Cell/styles.tsx","components/Cell/index.tsx","components/Isometry/styles.tsx","components/Isometry/index.tsx","components/Grid/styles.tsx","components/Grid/index.tsx","components/Palette/styles.tsx","components/Palette/index.tsx","store/palette/types.ts","utils/path.ts","components/App/index.tsx","store/palette/actions.ts","store/grid/actions.ts","store/grid/types.ts","store/grid/reducers.ts","store/palette/reducers.ts","store/index.ts","serviceWorker.ts","index.tsx"],"names":["Obstacle","Cell","styled","isFinish","isStart","type","props","p","Boulder","Gravel","Regular","WormholeEntrance","WormholeExit","CellComponent","defaultProps","Isometry","height","width","Math","sqrt","Actor","div","IsometryComponent","children","$Cell","Grid","$Isometry","NotFound","OffsetParent","Step","x","y","GridComponent","finish","onDraw","path","rows","shouldShowPath","start","useState","isDrawing","setIsDrawing","createOnMouseDown","document","addEventListener","onMouseUp","createOnMouseMove","removeEventListener","length","flatMap","types","map","isEqual","key","onMouseDown","onMouseMove","Button","isPressed","isPrimary","attrs","Group","Palette","Title","PaletteComponent","activeTool","onFind","onSelectTool","obstacles","title","group","index","tool","onClick","findShortestPath","paths","minBy","sumBy","point","findPath","a","allowWormholeEntrance","easystar","EasyStar","js","enableSync","setGrid","acceptableTiles","push","setAcceptableTiles","setTileCost","Promise","resolve","calculate","findPathWithPortals","entrances","exits","regularPath","forEach","all","entrance","exit","pathsToEntrances","pathsFromExits","shortestPathToEntrance","shortestPathFromExit","portalPath","connect","state","grid","palette","selectTool","updateCell","cellType","updateFinish","updatePath","updateStart","mutableRows","cols","slice","initialState","GridWidth","GridHeight","times","fill","Array","rootReducer","combineReducers","action","isMatch","update","String","$set","configureStore","createStore","devToolsEnhancer","Boolean","window","location","hostname","match","store","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a12b8fb7.chunk.js","sourcesContent":["export const CellHeight = 20;\nexport const CellSize = 64;\nexport const GridHeight = 10;\nexport const GridWidth = 10;\n\nexport enum Obstacle {\n  Boulder = 1,\n  Gravel,\n  Regular,\n  WormholeEntrance,\n  WormholeExit\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { CellHeight, CellSize, Obstacle } from 'config/constants';\n\nexport const Cell = styled(({isFinish, isStart, type, ...props}) => (\n  <div {...props} />\n))`\n  color: #fff;\n  font-size: ${CellSize}px;\n  font-weight: bold;\n  height: ${CellSize}px;\n  line-height: ${CellSize}px;\n  position: relative;\n  text-align: center;\n  width: ${CellSize}px;\n\n  &,\n  &::before,\n  &::after {\n    transition-duration: 0.1s;\n    transition-property: background-color, transform;\n    transition-timing-function: ease-out;\n  }\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n  }\n\n  &::before {\n    height: ${CellHeight}px;\n    left: 0;\n    top: 100%;\n    transform: rotateX(-90deg);\n    transform-origin: 50% 0;\n    width: 100%;\n  }\n\n  &::after {\n    height: 100%;\n    left: 100%;\n    top: 0;\n    transform: rotateY(90deg);\n    transform-origin: 0 50%;\n    width: ${CellHeight}px;\n  }\n\n  ${p => p.type === Obstacle.Boulder && `\n    background: #acacac;\n    transform: translateZ(${CellHeight}px);\n\n    &::before {\n      background: #5c5c5c;\n      transform: rotateX(-90deg) scaleY(2);\n    }\n\n    &::after {\n      background: #303030;\n      transform: rotateY(90deg) scaleX(2);\n    }\n  `}\n\n  ${p => p.type === Obstacle.Gravel && `\n    background: #949494;\n\n    &::before {\n      background: #5c5c5c;\n    }\n\n    &::after {\n      background: #303030;\n    }\n  `}\n\n  ${p => p.type === Obstacle.Regular && `\n    background: #a3581f;\n\n    &::before {\n      background: #7f4010;\n    }\n\n    &::after {\n      background: #5f240a;\n    }\n  `}\n\n  ${p => p.type === Obstacle.WormholeEntrance && `\n    background: red;\n    transform: translateZ(${-CellHeight}px);\n\n    &::before {\n      transform: rotateX(-90deg) scaleY(0);\n    }\n\n    &::after {\n      transform: rotateY(90deg) scaleX(0);\n    }\n  `}\n\n  ${p => p.type === Obstacle.WormholeExit && `\n    background: blue;\n    transform: translateZ(${-CellHeight}px);\n\n    &::before {\n      transform: rotateX(-90deg) scaleY(0);\n    }\n\n    &::after {\n      transform: rotateY(90deg) scaleX(0);\n    }\n  `}\n`;\n","import React, { FunctionComponent, HTMLAttributes } from 'react';\n\nimport { Obstacle } from 'config/constants';\n\nimport { Cell } from './styles';\n\ninterface Props extends HTMLAttributes<HTMLElement> {\n  isFinish?: boolean;\n  isStart?: boolean;\n  type?: Obstacle;\n};\n\nconst CellComponent: FunctionComponent<Props> = ({\n  isFinish,\n  isStart,\n  ...props\n}) => {\n  return (\n    <Cell {...props}>\n      {isStart && 'A'}\n      {isFinish && 'B'}\n    </Cell>\n  );\n};\n\nCellComponent.defaultProps = {\n  type: Obstacle.Regular\n};\n\nexport default CellComponent;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { CellSize } from 'config/constants';\n\nexport const Isometry = styled(({ height, width, ...props }) => (\n  <div {...props} />\n))`\n  height: ${p => p.height * CellSize * Math.sqrt(2) / 2}px;\n  position: relative;\n  width: ${p => p.width * CellSize * Math.sqrt(2)}px;\n\n  * {\n    backface-visibility: hidden;\n    transform-style: preserve-3d;\n  }\n`;\n\nexport const Actor = styled.div`\n  left: 50%;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%) rotateX(60deg) rotateZ(45deg);\n`;\n","import React, { FunctionComponent, HTMLAttributes } from 'react';\n\nimport { Actor, Isometry } from './styles';\n\ninterface Props extends HTMLAttributes<HTMLElement> {\n  height: number;\n  width: number;\n}\n\nconst IsometryComponent: FunctionComponent<Props> = ({\n  children,\n  ...props\n}) => {\n  return (\n    <Isometry {...props}>\n      <Actor>{children}</Actor>\n    </Isometry>\n  );\n};\n\nexport default IsometryComponent;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport $Cell from 'components/Cell';\nimport $Isometry from 'components/Isometry';\nimport { CellHeight, CellSize } from 'config/constants';\n\nexport const Cell = styled($Cell)`\n  cursor: pointer;\n  position: relative;\n\n  &:hover {\n    box-shadow: inset 0 0 0 2px #0f0;\n    z-index: 1;\n  }\n`;\n\nexport const Grid = styled(({ width, ...props }) => <div {...props} />)`\n  display: flex;\n  flex-wrap: wrap;\n  position: relative;\n  width: ${p => CellSize * p.width}px;\n`;\n\nexport const Isometry = styled($Isometry)`\n  box-sizing: content-box;\n  margin: auto;\n  padding: ${CellHeight}px 0;\n`;\n\nexport const NotFound = styled.div`\n  color: lime;\n  left: 50%;\n  pointer-events: none;\n  position: absolute;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 500px);\n`;\n\nexport const OffsetParent = styled.div`\n  position: relative;\n`;\n\nexport const Step = styled(({ x, y, ...props }) => <div {...props} />)`\n  background: lime;\n  height: ${p => CellSize}px;\n  left: ${p => p.x * CellSize}px;\n  opacity: 0.5;\n  pointer-events: none;\n  position: absolute;\n  top: ${p => p.y * CellSize}px;\n  transform: translateZ(0.01px); // safari rendering fix\n  width: ${p => CellSize}px;\n  z-index: 2;\n`;\n","import { flatMap, isEqual } from 'lodash';\nimport React, { FunctionComponent, useState } from 'react';\n\nimport { Obstacle } from 'config/constants';\n\nimport { Cell, Grid, Isometry, NotFound, OffsetParent, Step } from './styles';\n\ninterface Props {\n  finish: { x: number; y: number };\n  onDraw(x: number, y: number): any;\n  path: ReadonlyArray<{ x: number; y: number }> | null;\n  rows: ReadonlyArray<ReadonlyArray<Obstacle>>;\n  shouldShowPath: boolean;\n  start: { x: number; y: number };\n}\n\nconst GridComponent: FunctionComponent<Props> = ({\n  finish,\n  onDraw,\n  path,\n  rows,\n  shouldShowPath,\n  start\n}) => {\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  const createOnMouseDown = (x: number, y: number) => () => {\n    setIsDrawing(true);\n    onDraw(x, y);\n    document.addEventListener('mouseup', onMouseUp);\n  };\n\n  const createOnMouseMove = (x: number, y: number) => () => {\n    if (isDrawing) {\n      onDraw(x, y);\n    }\n  };\n\n  const onMouseUp = () => {\n    document.removeEventListener('mouseup', onMouseUp);\n    setIsDrawing(false);\n  };\n\n  const width = rows[0].length;\n  const height = rows.length;\n\n  return (\n    <OffsetParent>\n      <Isometry height={height} width={width}>\n        <Grid width={width}>\n          {flatMap(rows, (types, y) =>\n            types.map((type, x) => (\n              <Cell\n                isFinish={isEqual({ x, y }, finish)}\n                isStart={isEqual({ x, y }, start)}\n                key={`${x}:${y}`}\n                onMouseDown={createOnMouseDown(x, y)}\n                onMouseMove={createOnMouseMove(x, y)}\n                type={type}\n              />\n            ))\n          )}\n          {shouldShowPath &&\n            path &&\n            path.map(({ x, y }) => <Step key={`${x}:${y}`} x={x} y={y} />)}\n        </Grid>\n      </Isometry>\n      {shouldShowPath && !path && (\n        <NotFound>Shoot! Looks like I can't get there.</NotFound>\n      )}\n    </OffsetParent>\n  );\n};\n\nexport default GridComponent;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { CellHeight, CellSize } from 'config/constants';\nimport $Isometry from 'components/Isometry';\n\nexport const Button = styled(({ isPressed, isPrimary, ...props }) => (\n  <button {...props} />\n)).attrs({\n  type: 'button'\n})`\n  background: linear-gradient(#90a4ae, #78909c);\n  border: 1px solid #546e7a;\n  border-radius: 4px;\n  box-shadow: inset 0 1px #cfd8dc;\n  color: #eceff1;\n  cursor: pointer;\n  display: block;\n  font: inherit;\n  padding: 4px;\n  position: relative;\n  text-align: center;\n  width: min-content;\n\n  ${p => p.isPressed ? `\n    background: linear-gradient(#42a5f5, #1e88e5);\n    border-color: #1976d2;\n    box-shadow: inset 0 2px 2px #1976d2;\n    color: #bbdefb;\n    z-index: 2;\n  ` : p.isPrimary ? `\n    background: linear-gradient(#ffb74d, #ffa726);\n    border-color: #fb8c00;\n    box-shadow: inset 0 1px #ffe0b2;\n    color: #fff3e0;\n    width: ${CellSize * Math.sqrt(2) + 10}px;\n\n    &:hover,\n    &:focus {\n      background: linear-gradient(#ffcc80, #ffb74d);\n      border-color: #ffa726;\n      box-shadow: inset 0 1px #fff3e0;\n    }\n\n    &:active {\n      background: linear-gradient(#ffa726, #fb8c00);\n      border-color: #f57c00;\n      box-shadow: inset 0 2px 2px #f57c00;\n      color: #ffe0b2;\n    }\n  ` : `\n    &:hover,\n    &:focus {\n      background: linear-gradient(#b0bec5, #90a4ae);\n      border-color: #78909c;\n      box-shadow: inset 0 1px #eceff1;\n      color: #fff;\n      z-index: 1;\n    }\n\n    &:active {\n      background: linear-gradient(#78909c, #546e7a);\n      border-color: #455a64;\n      box-shadow: inset 0 2px 2px #455a64;\n      color: #cfd8dc;\n      z-index: 1;\n    }\n  `}\n\n  &:not(:first-child) {\n    border-bottom-left-radius: 0;\n    border-top-left-radius: 0;\n    margin-left: -1px;\n  }\n\n  &:not(:last-child) {\n    border-bottom-right-radius: 0;\n    border-top-right-radius: 0;\n  }\n`;\n\nexport const Group = styled.div`\n  display: flex;\n\n  &:not(:first-child) {\n    margin-left: 10px;\n  }\n`;\n\nexport const Isometry = styled($Isometry).attrs({ height: 1, width: 1 })`\n  margin-bottom: ${CellHeight}px;\n  margin-top: ${CellHeight}px;\n`;\n\nexport const Palette = styled.div`\n  display: flex;\n  margin: 20px auto 0;\n  transform: translate3d(0, 0, 0);\n  width: fit-content;\n`;\n\nexport const Title = styled.div`\n  padding-top: 5px;\n`;\n","import React, { FunctionComponent } from 'react';\n\nimport Cell from 'components/Cell';\nimport { Obstacle } from 'config/constants';\nimport {\n  FINISH_LOCATION,\n  PaletteTool,\n  START_LOCATION\n} from 'store/palette/types';\n\nimport { Button, Group, Isometry, Palette, Title } from './styles';\n\ninterface Props {\n  activeTool: PaletteTool;\n  onFind(): any;\n  onSelectTool(tool: PaletteTool): any;\n}\n\nconst PaletteComponent: FunctionComponent<Props> = ({\n  activeTool,\n  onFind,\n  onSelectTool\n}) => {\n  const obstacles = [\n    [\n      { type: Obstacle.Regular, title: 'Dirt' },\n      { type: Obstacle.Gravel, title: 'Gravel' },\n      { type: Obstacle.Boulder, title: 'Boulder' }\n    ],\n    [\n      { type: Obstacle.WormholeEntrance, title: 'Wormhole Entrance' },\n      { type: Obstacle.WormholeExit, title: 'Wormhole Exit' }\n    ]\n  ];\n\n  return (\n    <Palette>\n      {obstacles.map((group, index) => (\n        <Group key={index}>\n          {group.map(tool => (\n            <Button\n              isPressed={tool.type === activeTool}\n              key={tool.type}\n              onClick={() => onSelectTool(tool.type)}\n            >\n              <Isometry>\n                <Cell type={tool.type} />\n              </Isometry>\n              <Title>{tool.title}</Title>\n            </Button>\n          ))}\n        </Group>\n      ))}\n      <Group>\n        <Button\n          isPressed={activeTool === START_LOCATION}\n          onClick={() => onSelectTool(START_LOCATION)}\n        >\n          <Isometry>\n            <Cell isStart />\n          </Isometry>\n          <Title>Start Location</Title>\n        </Button>\n        <Button\n          isPressed={activeTool === FINISH_LOCATION}\n          onClick={() => onSelectTool(FINISH_LOCATION)}\n        >\n          <Isometry>\n            <Cell isFinish />\n          </Isometry>\n          <Title>Finish Location</Title>\n        </Button>\n      </Group>\n      <Group>\n        <Button isPrimary onClick={onFind}>Find</Button>\n      </Group>\n    </Palette>\n  );\n};\n\nexport default PaletteComponent;\n","import { Action } from 'redux';\n\nimport { Obstacle } from 'config/constants';\n\nexport const FINISH_LOCATION = 'FINISH_LOCATION';\nexport const START_LOCATION = 'START_LOCATION';\n\nexport type PaletteTool =\n  | Obstacle\n  | typeof FINISH_LOCATION\n  | typeof START_LOCATION;\n\nexport interface PaletteState {\n  activeTool: PaletteTool;\n}\n\nexport const SELECT_TOOL = 'SELECT_TOOL';\n\ninterface SelectTypeAction extends Action {\n  type: typeof SELECT_TOOL;\n  tool: PaletteTool;\n}\n\nexport type PaletteAction = SelectTypeAction;\n","import EasyStar from 'easystarjs';\nimport { minBy, sumBy } from 'lodash';\n\nimport { Obstacle } from 'config/constants';\n\ntype Point = { x: number; y: number };\ntype Path = Point[] | null;\n\nexport const findShortestPath = (rows: Obstacle[][], paths: Path[]): Path => {\n  const shortestPath = minBy(paths, path =>\n    sumBy(path, point => {\n      const type = rows[point.y][point.x];\n\n      if (type === Obstacle.Gravel) {\n        return 2;\n      }\n\n      if (type === Obstacle.Boulder) {\n        return 0;\n      }\n\n      return 1;\n    })\n  );\n  return shortestPath || null;\n};\n\nexport const findPath = async (\n  rows: Obstacle[][],\n  start: Point,\n  finish: Point,\n  allowWormholeEntrance: boolean = false\n): Promise<Path> => {\n  const easystar = new EasyStar.js();\n  easystar.enableSync();\n  easystar.setGrid(rows);\n\n  const acceptableTiles = [Obstacle.Gravel, Obstacle.Regular];\n\n  if (allowWormholeEntrance) {\n    acceptableTiles.push(Obstacle.WormholeEntrance);\n  }\n\n  easystar.setAcceptableTiles(acceptableTiles);\n\n  easystar.setTileCost(Obstacle.Gravel, 2);\n  easystar.setTileCost(Obstacle.Regular, 1);\n\n  if (allowWormholeEntrance) {\n    easystar.setTileCost(Obstacle.WormholeEntrance, 1);\n  }\n\n  return new Promise(resolve => {\n    easystar.findPath(start.x, start.y, finish.x, finish.y, resolve);\n    easystar.calculate();\n  });\n};\n\nexport const findPathWithPortals = async (\n  rows: Obstacle[][],\n  start: Point,\n  finish: Point\n): Promise<Path> => {\n  const entrances: Point[] = [];\n  const exits: Point[] = [];\n\n  const regularPath = await findPath(rows, start, finish);\n\n  rows.forEach((types, y) => {\n    types.forEach((type, x) => {\n      if (type === Obstacle.WormholeEntrance) {\n        entrances.push({ x, y });\n      } else if (type === Obstacle.WormholeExit) {\n        exits.push({ x, y });\n      }\n    });\n  });\n\n  if (!entrances.length || !exits.length) {\n    return regularPath;\n  }\n\n  const [pathsToEntrances, pathsFromExits] = await Promise.all([\n    Promise.all(\n      entrances.map(entrance => findPath(rows, start, entrance, true))\n    ),\n    Promise.all(exits.map(exit => findPath(rows, exit, finish)))\n  ]);\n\n  const shortestPathToEntrance = findShortestPath(rows, pathsToEntrances);\n  const shortestPathFromExit = findShortestPath(rows, pathsFromExits);\n\n  if (!shortestPathToEntrance || !shortestPathFromExit) {\n    return regularPath;\n  }\n\n  const portalPath = [...shortestPathToEntrance, ...shortestPathFromExit];\n\n  if (!regularPath) {\n    return portalPath;\n  }\n\n  return findShortestPath(rows, [regularPath, portalPath]);\n};\n","import React, { FunctionComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport Grid from 'components/Grid';\nimport Palette from 'components/Palette';\nimport { AppState } from 'store';\nimport {\n  updateCell,\n  updateFinish,\n  updatePath,\n  updateStart\n} from 'store/grid/actions';\nimport { GridState } from 'store/grid/types';\nimport { selectTool } from 'store/palette/actions';\nimport {\n  FINISH_LOCATION,\n  PaletteState,\n  START_LOCATION\n} from 'store/palette/types';\nimport { findPathWithPortals } from 'utils/path';\n\ninterface Props {\n  grid: GridState;\n  palette: PaletteState;\n  selectTool: typeof selectTool;\n  updateCell: typeof updateCell;\n  updateFinish: typeof updateFinish;\n  updatePath: typeof updatePath;\n  updateStart: typeof updateStart;\n}\n\nconst App: FunctionComponent<Props> = ({\n  grid,\n  palette,\n  selectTool,\n  updateCell,\n  updateFinish,\n  updatePath,\n  updateStart\n}) => {\n  return (\n    <div>\n      <Grid\n        finish={grid.finish}\n        onDraw={(x, y) => {\n          if (palette.activeTool === START_LOCATION) {\n            updateStart(x, y);\n          } else if (palette.activeTool === FINISH_LOCATION) {\n            updateFinish(x, y);\n          } else {\n            updateCell(x, y, palette.activeTool);\n          }\n        }}\n        path={grid.path}\n        rows={grid.rows}\n        shouldShowPath={grid.shouldShowPath}\n        start={grid.start}\n      />\n      <Palette\n        activeTool={palette.activeTool}\n        onFind={async () => {\n          const mutableRows = grid.rows.map(cols => cols.slice());\n          const path = await findPathWithPortals(\n            mutableRows,\n            grid.start,\n            grid.finish\n          );\n          updatePath(path);\n        }}\n        onSelectTool={selectTool}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  grid: state.grid,\n  palette: state.palette\n});\n\nexport default connect(\n  mapStateToProps,\n  { selectTool, updateCell, updateFinish, updatePath, updateStart }\n)(App);\n","import { PaletteAction, PaletteTool, SELECT_TOOL } from './types';\n\nexport const selectTool = (tool: PaletteTool): PaletteAction => ({\n  type: SELECT_TOOL,\n  tool\n});\n","import { Obstacle } from 'config/constants';\n\nimport {\n  GridAction,\n  UPDATE_CELL,\n  UPDATE_FINISH,\n  UPDATE_PATH,\n  UPDATE_START\n} from './types';\n\nexport const updateFinish = (x: number, y: number): GridAction => ({\n  type: UPDATE_FINISH,\n  x,\n  y\n});\n\nexport const updatePath = (\n  path: ReadonlyArray<{ x: number; y: number }> | null\n): GridAction => ({\n  type: UPDATE_PATH,\n  path\n});\n\nexport const updateStart = (x: number, y: number): GridAction => ({\n  type: UPDATE_START,\n  x,\n  y\n});\n\nexport const updateCell = (\n  x: number,\n  y: number,\n  cellType: Obstacle\n): GridAction => ({\n  type: UPDATE_CELL,\n  x,\n  y,\n  cellType\n});\n","import { Action } from 'redux';\n\nimport { Obstacle } from 'config/constants';\n\nexport interface GridState {\n  finish: { x: number; y: number };\n  path: ReadonlyArray<{ x: number; y: number }> | null;\n  rows: ReadonlyArray<ReadonlyArray<Obstacle>>;\n  shouldShowPath: boolean;\n  start: { x: number; y: number };\n}\n\nexport const UPDATE_CELL = 'UPDATE_CELL';\nexport const UPDATE_FINISH = 'UPDATE_FINISH';\nexport const UPDATE_PATH = 'UPDATE_PATH';\nexport const UPDATE_START = 'UPDATE_START';\n\ninterface UpdateCellAction extends Action {\n  type: typeof UPDATE_CELL;\n  x: number;\n  y: number;\n  cellType: Obstacle;\n}\n\ninterface UpdateFinishAction extends Action {\n  type: typeof UPDATE_FINISH;\n  x: number;\n  y: number;\n}\n\ninterface UpdatePathAction extends Action {\n  type: typeof UPDATE_PATH;\n  path: ReadonlyArray<{ x: number; y: number }> | null;\n}\n\ninterface UpdateStartAction extends Action {\n  type: typeof UPDATE_START;\n  x: number;\n  y: number;\n}\n\nexport type GridAction =\n  | UpdateCellAction\n  | UpdateFinishAction\n  | UpdatePathAction\n  | UpdateStartAction;\n","import update from 'immutability-helper';\nimport { fill, isMatch, times } from 'lodash';\n\nimport { GridHeight, GridWidth, Obstacle } from 'config/constants';\n\nimport {\n  GridAction,\n  GridState,\n  UPDATE_CELL,\n  UPDATE_FINISH,\n  UPDATE_PATH,\n  UPDATE_START\n} from './types';\n\nexport const initialState: GridState = {\n  finish: { x: GridWidth - 1, y: GridHeight - 1 },\n  path: null,\n  rows: times(GridHeight, () => fill(Array(GridWidth), Obstacle.Regular)),\n  shouldShowPath: false,\n  start: { x: 0, y: 0 }\n};\n\nexport const gridReducer = (state = initialState, action: GridAction) => {\n  switch (action.type) {\n    case UPDATE_CELL:\n      if (isMatch(action, state.start) || isMatch(action, state.finish)) {\n        return state;\n      }\n      return update(state, {\n        rows: {\n          [String(action.y)]: {\n            [String(action.x)]: { $set: action.cellType }\n          }\n        },\n        shouldShowPath: { $set: false }\n      });\n    case UPDATE_FINISH:\n      return update(state, {\n        finish: { $set: { x: action.x, y: action.y } },\n        rows: {\n          [String(action.y)]: {\n            [String(action.x)]: { $set: Obstacle.Regular }\n          }\n        },\n        shouldShowPath: { $set: false }\n      });\n    case UPDATE_PATH:\n      return update(state, {\n        path: { $set: action.path },\n        shouldShowPath: { $set: true }\n      });\n    case UPDATE_START:\n      return update(state, {\n        rows: {\n          [String(action.y)]: {\n            [String(action.x)]: { $set: Obstacle.Regular }\n          }\n        },\n        shouldShowPath: { $set: false },\n        start: { $set: { x: action.x, y: action.y } }\n      });\n    default:\n      return state;\n  }\n};\n","import { Obstacle } from 'config/constants';\n\nimport { PaletteAction, PaletteState, SELECT_TOOL } from './types';\n\nexport const initialState: PaletteState = {\n  activeTool: Obstacle.Regular\n};\n\nexport const paletteReducer = (state = initialState, action: PaletteAction) => {\n  switch (action.type) {\n    case SELECT_TOOL:\n      return {\n        ...state,\n        activeTool: action.tool\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers, createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nimport { gridReducer } from './grid/reducers';\nimport { paletteReducer } from './palette/reducers';\n\nconst rootReducer = combineReducers({\n  grid: gridReducer,\n  palette: paletteReducer\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nconst configureStore = () =>\n  createStore(rootReducer, devToolsEnhancer({}));\n\nexport default configureStore;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\n\nimport App from 'components/App';\nimport configureStore from 'store';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nconst Root = () => (\n  <ReduxProvider store={store}>\n    <App />\n  </ReduxProvider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}